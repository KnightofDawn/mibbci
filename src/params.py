

import numpy as np
import lasagne




# EEG setup-related
CHANNEL_NAMES = ['FC3', 'FCz', 'FC4', 'C5', 'C3', 'C1', 'Cz', 'C2', 'C4', 'C6', 'CP5', 'CPz', 'CP6', 'P3', 'Pz', 'P4']
FREQ_S = 128.0
NUM_CHANNELS = 16
LEN_INITIAL_DATA = 128
AMP_WAIT_SEC = 0.01
LEN_DATA_CHUNK_READ = 16.0
LEN_RIGHT_SEC = 5.0
LEN_LEFT_SEC = 5.0
LEN_IDLE_SEC = 5.0
LEN_PERIOD_SEC = LEN_IDLE_SEC + LEN_RIGHT_SEC + LEN_IDLE_SEC + LEN_LEFT_SEC
LEN_COLOR_CONV_SEC = 1.0
LEN_CALIB_SEC = LEN_PERIOD_SEC
LEN_REC_SEC = 10.0 * LEN_PERIOD_SEC
LEN_REC_BUF_SEC = 1.2 * LEN_REC_SEC


# Paradigm-related
NUM_EVENT_TYPES = 3     # r, l, idle
EVENT_ID_RH = 0
EVENT_ID_LH = 1
EVENT_ID_IDLE = 2
LABEL_ID_RED = 17
M_FIR = 32
LEN_PADDING = M_FIR / LEN_DATA_CHUNK_READ
FEAT_MULT_1_SIMU = 0.002
FEAT_MULT_2_SIMU = 1.0
FEAT_MULT_1_REAL = 0.001
FEAT_MULT_2_REAL = 1.0
IMAGE_W = 960
IMAGE_H = 640
#CURSOR_COLOR_REST = 'green'
#CURSOR_COLOR_RIGHT = 'red'
#CURSOR_COLOR_LEFT = 'blue'
#CURSOR_COLOR_IDLE = 'black'
CURSOR_COLOR_REST = np.array([0, 127, 0])    # RGB
CURSOR_COLOR_RIGHT = np.array([255, 0, 0])
CURSOR_COLOR_LEFT = np.array([0, 0, 255])
CURSOR_COLOR_IDLE = np.array([0, 0, 0])


# Signal proc
DEC_FACTOR = 2    # 128/2 = 64 => max freq is 32 Hz
WINDOW_SIZE_RAW_SAMPLES = int(2.0 * FREQ_S)
WINDOW_SIZE_DEC_SAMPLES = WINDOW_SIZE_RAW_SAMPLES / DEC_FACTOR


# NN
is_runtest_mode = False
if is_runtest_mode:
    NUM_MAX_TRAIN_EPOCHS = 10
    NUM_TRAIN_DATA_INSTANCES = 8
else:
    NUM_MAX_TRAIN_EPOCHS = 100
    NUM_TRAIN_DATA_INSTANCES = 1024
VALIDATION_DATA_RATIO = 0.4
BATCH_SIZE = 32
INTERNAL_NONLINEARITY_CONV = lasagne.nonlinearities.linear
DROPOUT_PROBABILITY = 0.5
MAXPOOL_SIZE = 2
NUM_DENSE_UNITS = 512
INTERNAL_NONLINEARITY_DENSE = lasagne.nonlinearities.rectify


# Cursor
CURSOR_STEP_MULT = 0.0